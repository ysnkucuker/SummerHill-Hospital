// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package usermanager.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the UserManager module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Department_Employee_EmportFromRestBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.ACT_Department_Employee_EmportFromRest");
		return builder;
	}

	public static void aCT_Department_Employee_EmportFromRest(IContext context)
	{
		aCT_Department_Employee_EmportFromRestBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Employee_CancelBuilder(
		usermanager.proxies.Employee _employee
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.ACT_Employee_Cancel");
		builder = builder.withParam("Employee", _employee);
		return builder;
	}

	public static void aCT_Employee_Cancel(
		IContext context,
		usermanager.proxies.Employee _employee
	)
	{
		aCT_Employee_CancelBuilder(
				_employee
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Employee_SaveBuilder(
		usermanager.proxies.Employee _employee
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.ACT_Employee_Save");
		builder = builder.withParam("Employee", _employee);
		return builder;
	}

	public static void aCT_Employee_Save(
		IContext context,
		usermanager.proxies.Employee _employee
	)
	{
		aCT_Employee_SaveBuilder(
				_employee
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Employee_UnassignedShiftsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.ACT_Employee_UnassignedShifts");
		return builder;
	}

	public static void aCT_Employee_UnassignedShifts(IContext context)
	{
		aCT_Employee_UnassignedShiftsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Shift_CreateMockDataBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.ACT_Shift_CreateMockData");
		return builder;
	}

	public static void aCT_Shift_CreateMockData(IContext context)
	{
		aCT_Shift_CreateMockDataBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder cAL_Employee_FullNameBuilder(
		usermanager.proxies.Employee _employee
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.CAL_Employee_FullName");
		builder = builder.withParam("Employee", _employee);
		return builder;
	}

	public static java.lang.String cAL_Employee_FullName(
		IContext context,
		usermanager.proxies.Employee _employee
	)
	{
		Object result = cAL_Employee_FullNameBuilder(
				_employee
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder cAL_JobtitleBuilder(
		java.lang.String _jobtitle
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.CAL_Jobtitle");
		builder = builder.withParam("Jobtitle", _jobtitle);
		return builder;
	}

	public static usermanager.proxies.ENUM_Jobtitle cAL_Jobtitle(
		IContext context,
		java.lang.String _jobtitle
	)
	{
		Object result = cAL_JobtitleBuilder(
				_jobtitle
			)
			.execute(context);
		return result == null ? null : usermanager.proxies.ENUM_Jobtitle.valueOf((java.lang.String) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder microflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.Microflow");
		return builder;
	}

	public static void microflow(IContext context)
	{
		microflowBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_Employee_CreateDeleteAccountBuilder(
		usermanager.proxies.Employee _employee
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("UserManager.OCH_Employee_CreateDeleteAccount");
		builder = builder.withParam("Employee", _employee);
		return builder;
	}

	public static void oCH_Employee_CreateDeleteAccount(
		IContext context,
		usermanager.proxies.Employee _employee
	)
	{
		oCH_Employee_CreateDeleteAccountBuilder(
				_employee
			)
			.execute(context);
	}
}
